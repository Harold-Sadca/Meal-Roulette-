.App {
  text-align: center;
  background-attachment: fixed;
  min-height: 100vh;
  opacity: 0.8;
  width: 80%;
  margin: auto;
}

/* .grayscale {
  background: url("../public/images/1412206.jpg");
  -moz-filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
  -o-filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
  -webkit-filter: grayscale(0%);
  filter: gray;
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
} */

body {
  background-image: url("../public/images/pexels-photo-616401.jpeg");
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

/* .App::after {
	content: " ";
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	min-height: 100%;
	box-sizing: border-box;
	background-image: url("../public/images/1412206.jpg");
	filter: blur(1.5px);
	z-index: -1;
  opacity: 0.8;
  animation: Appscroll 60s linear infinite;
  background-repeat: repeat;
  background-size: cover;
  background-size: cover;
} */

/* .App::before {
	content: " ";
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	min-height: 100%;
	box-sizing: border-box;
	background-image: url("../public/images/1412206.jpg");
	filter: blur(1.5px);
	z-index: -1;
  opacity: 0.7;
  animation: Appscroll 60s linear infinite;
} */

/* img{
  filter: grayscale(50%);
} */

body {
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

@keyframes Appscroll {
  0% {
    background-position : 0px 0px
  }
  100% {
    background-position : 0px -808px
  }
}

/* Create Recipe Form CSS */


.recipe-form-container {
  display: flex;
  flex-direction: column;
  width: 75%;
  margin: auto;
  background-color: rgba(243, 233, 233, 0.3);
  padding: 2em;
  border-radius: 10px;
}

.create-recipe {
  margin-top: 10px;
}

.header {
  /* text-shadow: rgb(255, 255, 255) 1px 0 10px; */
  font-size: 2em;
  font-weight: 600;
  /* background-image: linear-gradient(to left, #000000, #ffffff); */
  color: rgb(0, 0, 0);
  background-clip: text;
  -webkit-background-clip: text;
}

.recipe-form {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: flex-start;
}

.name-input {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: flex-start;
}

.name-input span {
  text-shadow: rgb(255, 255, 255) 1px 0 10px;
  font-size: 1.5em;
  font-weight: 600;
  margin-bottom: 5px;
}

.name-input input {
  width: 100%;
  height: 2em;
  border-radius: 5px;
  background-color: rgba(0, 0, 0, 0.2);
  font-size: 1.5em;
  border: none;
}

.description-input {
  display: flex;
  flex-direction: column;
  width: 20%;
  height: 100%;
  align-items: flex-start;
}

.ingredients-input, .description-input {
  display: flex;
  flex-direction: column;
  width: 20%;
  height: 100%;
  align-items: flex-start;
}

.description-input {
  margin-left: 15px;
}

.ingredients-input textarea, .description-input textarea {
  width: 100%;
  height: 90%;
  border-radius: 5px;
  resize: none;
  background-color: rgba(0, 0, 0, 0.2);
  font-size: 1.5em;
  color: #000;
}

.ingredients-input span, .description-input span {
  text-shadow: rgb(255, 255, 255) 1px 0 10px;
  font-size: 1.5em;
  font-weight: 600;
  margin-bottom: 5px;
}

.instructions-input {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 60%;
  align-items: flex-start;
  margin-left: 15px;
}

.instructions-input span {
  text-shadow: rgb(255, 255, 255) 1px 0 10px;
  font-size: 1.5em;
  font-weight: 600;
  margin-bottom: 5px;
}

.instructions-input textarea {
  color: #000000;
  width: 100%;
  resize: none;
  border-radius: 5px;
  height: 90%;
  background-color: rgba(0, 0, 0, 0.2);
  font-size: 1.5em;
  /* text-shadow: rgb(255, 255, 255) 1px 0 10px; */
  
}

.ingredients-instructions {
  display: flex;
  height: 500px;
  width: 100%;
  align-items: center;
  justify-content: center;
}

.name-and-category {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.name-and-category input {
  width: 75%;
  align-self: flex-start;
  margin-right: 1em;
}

.category-selection {
  width: 25%;
  border-radius: 5px;
  text-align: center;
}

/* Generic Buttons CSS */

button {
  cursor: pointer;
}

.btn-submit {
  padding: 10px;
  font-size: 20px;
  color: whitesmoke;
  font-weight: bold;
  width: 100%;
  height: 60px;
  border-radius: 5px;
  border: none;
  text-align: center;
  background-color: rgb(20, 162, 187);
  transition: 0.5s;
}

.btn-submit:hover{
  color: rgb(41, 163, 185);
  background-color: white;
  border:1px solid rgb(0, 157, 255);
  box-shadow: 0 0 15px rgb(1, 122, 143);
  transition: 0.5s;
  border-radius: 15px;
}

.favourite:focus {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  -ms-border-radius: 3px;
  border-radius: 3px;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
  -ms-transition: all 0.5s;
  transition: all 0.5s;
  color: #1892BF;
  border-color: #1892BF;
  background: transparent;
  margin: 0px 3px;
  padding: 7px 14px;
  outline: 0;
  margin-left: 20px;
}

.unfavorite-text {
  display: none;
}


/* Recipe Details Display */
.display-recipe-container {
  display: flex;
  flex-direction: column;
  background-color: rgba(255, 255, 255, 0.2);
  width: 80%;
  margin: auto;
  margin-top: 2em;
  /* height: 750px; */
  align-items: flex-start;
  border-radius: 10px;
}

.name-author {
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.3);
  width: 80%;
  align-self: center;
}

.display-recipe-name {
  align-self: center;
  font-size: 1.5em;
  font-weight: 500;
  /* background-image: linear-gradient(to left, #000000, #ffffff); */
  /* color: transparent; */
  color: #000;
  background-clip: text;
  -webkit-background-clip: text;
  width: 100%;
}

.display-recipe-ingredients {
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  font-size: 1.1em;

}

.display-instructions {
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  font-size: 1.1em;
  margin-bottom: 1em;
}

.display-instructions-label, .display-ingredients-label {
  font-size: 1.5em;
  font-weight: 500;
  margin-bottom: 10px;
}

.display-ingredient-list {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.add-meal-buttons {
  display: flex;
  align-items: center;
  flex-direction: row;
  justify-content: space-around;
  width: 100%;
  margin: auto;
}

.add-meal {
  width: 15em;
  margin: none;
  text-decoration:none;
  font-size:1.5em;
  color:#000000;
  padding:10px 10px;
  border:3px solid #000000;
  position:relative;
  border-radius: 10px;
  width: 20%;
}



.add-meal::before,
.add-meal::after {
  content:" ";
  position:absolute;
  width:20px;
  height:20px;
  border:inherit;
  transition:all .5s;
}
.add-meal::before {
  top:-10px;
  left:-10px;
  border-width:3px 0 0 3px;
}

.add-meal::after {
  bottom:-10px;
  right:-10px;
  border-width:0 3px 3px 0;
}
.add-meal:nth-child(even),
.add-meal:nth-child(even) {
  border:3px solid #ffffff;
  background-color: #000000;
  color: #ffffff;
}

/* .add-meal:nth-child(even):hover::before,
.add-meal:nth-child(even):hover::after {
  background-color: rgba(0, 0, 0, 0.3);
  width:calc(100% + 15px);
  height:calc(100% + 15px);
  border:3px solid #ffffff;
  color:#ffffff;
}

.add-meal:nth-child(odd):hover::before,
.add-meal:nth-child(odd):hover::after {
  background-color: rgba(0, 0, 0, 0.3);
  width:calc(100% + 15px);
  height:calc(100% + 15px);
  border:3px solid #ffffff;
  color:#000000;
} */

.add-meal:hover::before,
.add-meal:hover::after {
  width:calc(100% + 15px);
  height:calc(100% + 15px);
  border:3px solid #ffffff;
  color:#ffffff;
}

/* .generate {
  display: flex;
  flex-direction: row;
  width: 80%;
  margin: auto;
  background-color: rgba(243, 233, 233, 0.3);
  border-radius: 10px;
} */

/* .generate {
  width: 45%;
  margin: auto;
} */

/* .generate-btn::before,
.generate-btn::after{

}
.generate-btn::before{

}
.generate-btn::after{
  bottom:-15px;
  right:-15px;
  border-width:0 3px 3px 0;
}
.generate-btn:hover::before,
.generate-btn:hover::after{

} */

/* <div className="comment-container">
<textarea className="comment-input"></textarea>
<button className="post-comment">Post</button>
</div> */
/* Comments CSS */
.comment-form-container {
  display: flex;
  flex-direction: column;
  width: 80%;
  margin: auto;
  margin-top: 2em;
  height: 250px;
  align-items: flex-start;
  border-radius: 10px;
}

.comment-input {
  width: 100%;
  resize: none;
  border-radius: 5px;
  height: 250px;
  background-color: rgb(255, 255, 255);
}

.post-comment {
  width: 250px;
  margin: 20px 0;
  align-self: flex-end;
}

/* Preview CSS */

.recipe-preview {
  font-size: 2em;
  font-weight: 500;
  text-shadow: rgb(255, 255, 255) 1px 0 10px;

}

/* <div className="comments-list">
{comments.map((com) => {
  return <div>
    <p className="comment">{com.comment}</p>
    <span className="comment-author">{com.author}</span>
  </div>
})}
</div> */

/* Comment CSS */

.comments-list {
  display: flex;
  flex-direction: column;
  width: 80%;
  margin: auto;
  border-radius: 10px;
}

.comment-list-container {
  margin-bottom: 15px;
  padding: 10px;
  display: flex;
  justify-content: center;
  height: 150px;
  flex-direction: column;
  flex-wrap: wrap;
}

.comment {
  align-self: flex-start;
}

.comment-author {
  align-self: flex-end;
}

.comment-list-container:nth-child(even) {
  background-color: lightyellow;
  border-radius: 5px;
}

.comment-list-container:nth-child(odd) {
  background-color: rgb(156, 255, 165);
  border-radius: 5px;
}

.comment-list-container

/* <div className="signup-container">
<div className="header">Sign Up</div>
<form className="signup-form" onSubmit={(e) => {submitUser(e)}}>
  <label className="username-input">
  <span>Username:</span>
    <input id="username" value={username} onChange={(event) => {valSetter(event)}} type="text" name="username" placeholder='Username...' />
  </label>
  <div className="password-input">
    <span>Password:</span>
    <input id="password" value={password} onChange={(event) => {valSetter(event)}} type="password" name="password" placeholder='Password...' />
  </div>
  <div className="email-input">
    <span>Email:</span>
    <input id="email" value={email} onChange={(event) => {valSetter(event)}} type="Email" name="Email" placeholder='Email...' />
  </div>
  <button className="create" type="submit"> Sign Up </button>
</form>
</div> */

/* Sign Up CSS */
.signup-container {
  width: 25%;
  margin: 20px auto;
  display: flex;
  flex-direction: column;
  height: 30em;
  align-items: center;
  justify-content: center;
}

.header {}

.signup-form {
  padding: 10px;
  height: 80%;
  width: 80%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}

.username-input, .password-input, .email-input {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.username-input span, .password-input span, .email-input span {
  font-size: 1.5em;
  font-weight: 500;
  text-shadow: rgb(255, 255, 255) 1px 0 10px;
  display: none;
}

#username, #password, #email {
  width: 100%;
  height: 60px;
  border-radius: 5px;
  border: none;
  font-size: 1em;
}

.password-input {}

.password-input span {}

#password {}

.email-input {}

.email-input span {}

#email {}

/* 
    <div className="login-form-container">
      <div className="header">Login</div>
      <form className="login-form" onSubmit={(e) => {login(e)}}>
        <label className="username-input">
        <span>Username:</span>
          <input id="username" value={username} onChange={(event) => {valSetter(event)}} type="text" name="username" placeholder='Username...' />
        </label>
        <div className="password-input">
          <span>Password:</span>
          <input id="password" value={password} onChange={(event) => {valSetter(event)}} type="password" name="password" placeholder='Password...' />
        </div>
        <button className="create" type="submit"> Login </button>
      </form>
    </div>
*/

/* Login CSS */

.login-form {
  padding: 10px;
  height: 80%;
  width: 80%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}

.login-form-container{
  width: 25%;
  margin: 20px auto;
  display: flex;
  flex-direction: column;
  height: 30em;
  align-items: center;
  justify-content: center;
}


/* <div className="homepage-container">
<div className="category-container starter">
  <div className="category-name">Starters</div>
  <div className="category-description">
    From simple and delicious soups and salads to more elaborate tarts and terrines,
   be inspired to start your meal with a taste sensation. See all starter recipes.
   </div>
</div>
<div className="category-container mains">
  <div className="category-name">Mains</div>
  <div className="category-description">
  Hundreds of main dish recipes. Choose from top-rated comfort food, healthy, and vegetarian options.
   Find your dinner star now!
  </div>
</div>
<div className="category-container desserts">
  <div className="category-name">Desserts</div>
  <div className="category-description">
    Why stop after the mains?
    Always end it on a high note I always say.
    You should get your just dessert.
  </div>
</div>
</div> */

/* Homepage CSS */

.homepage-container {
  display: flex;
  flex-direction: row;
  min-height: 90vh;
  align-items: center;
}

.category-container {
  margin: 0 0.5em;
  height: 40em;
  width: 33%;
  background-size: 100%;
  border-radius: 10px;
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.category-name {
  font-weight: 500;
  font-size: 2em;

}

.category-description {
  display: flex;
  width: 60%;
  margin: auto;
  align-self: center;
  justify-self: center;
  font-size: 1.3em;
  color: #000000;
  text-shadow: rgb(255, 255, 255) 1px 0 10px;
  background-color: rgba(255, 255, 255, 0.2);
  padding: 0.5em;
  border-radius: 5px;
}

.starter {
  background-image: url("../public/images/starter-bg.jfif");
  filter: grayscale(50%);
}

.mains {
  background-image: url("../public/images/mains-bg.jfif");
}

.dessert {
  background-image: url("../public/images/temp-bg.jfif");
}

/* CSS */

.btn-1,
.btn-2 {
  width: 300px;
  height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  cursor: pointer;
}
/* Created by http://grohit.com/  */
footer a,
.btn-1 a,
.btn-2 a {
  text-decoration: none;
  border: 2px solid #010100;
  padding: 15px;
  color: #000;
  text-transform: uppercase;
  letter-spacing: 2px;
  position: relative;
  display: inline-block;
}

span {
  position: relative;
  /* z-index coz when we put bg to before and after this span text will not be visible */
  z-index: 3;
}

/* Button 1 styles */

.btn-1 a::before {
  content: "";
  position: absolute;
  top: 5px;
  left: -2px;
  width: calc(100% + 6px);
  /*100% plus double the times left values*/
  height: calc(100% - 10px);
  background-color: #ffffff;
  transition: all 0.5s ease-in-out;
  transform: scaleY(1);
}

.btn-1 a:hover::before,
.btn-2 a:hover::before {
  transform: scaleY(0);
}

.btn-1 a::after {
  content: "";
  position: absolute;
  left: 5px;
  top: -5px;
  width: calc(100% - 10px);
  /*100% plus double the times left values*/
  height: calc(100% + 10px);
  background-color: #ffffff;
  transition: all 0.5s ease-in-out;
  transform: scaleX(1);
}
/* Created by http://grohit.com/  */

.btn-1 a:hover::after,
.btn-2 a:hover::after {
  transform: scaleX(0);
}

/* Button 2 styles */

.btn-2 a {
  color: #ffffff;
  transition: all 0.5s ease-in-out;
}

.btn-2 a:hover {
  color: #000000;
  transition: all 0.5s ease-in-out;
}

.btn-2 a::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  transition: all 0.5s ease-in-out;
  transform: scaleY(1);
}

.btn-2 a::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  transition: all 0.5s ease-in-out;
  transform: scaleX(1);
}


/* CSS */
.button-29 {
  align-items: center;
  appearance: none;
  background-image: radial-gradient(100% 100% at 100% 0, #5adaff 0, #5468ff 100%);
  border: 0;
  border-radius: 6px;
  box-shadow: rgba(45, 35, 66, .4) 0 2px 4px,rgba(45, 35, 66, .3) 0 7px 13px -3px,rgba(58, 65, 111, .5) 0 -3px 0 inset;
  box-sizing: border-box;
  color: #fff;
  cursor: pointer;
  display: inline-flex;
  font-family: "JetBrains Mono",monospace;
  height: 48px;
  justify-content: center;
  line-height: 1;
  list-style: none;
  overflow: hidden;
  padding-left: 16px;
  padding-right: 16px;
  position: relative;
  text-align: left;
  text-decoration: none;
  transition: box-shadow .15s,transform .15s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  white-space: nowrap;
  will-change: box-shadow,transform;
  font-size: 18px;
}

.button-29:focus {
  box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, .4) 0 2px 4px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;
}

.button-29:hover {
  box-shadow: rgba(45, 35, 66, .4) 0 4px 8px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;
  transform: translateY(-2px);
}

.button-29:active {
  box-shadow: #3c4fe0 0 3px 7px inset;
  transform: translateY(2px);
}

/* <div id = {recipe._id} key={recipe._id} className="recipe-preview-container">
<div id = {recipe._id} onClick={(e) => { clickHandler()}} className="recipe-preview-name">{recipe.name}</div>
<div id = {recipe._id} onClick={(e) => { clickHandler()}} className="recipe-preview-description">{recipe.description}</div>
</div> */

/* Recipe Preview CSS */

.recipe-preview-container {
  width: 60%;
  margin: 2em auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  /* border: 1px solid black; */
  height: 200px;
  border-radius: 10px;
  padding: 1em;
  transition: 0.5s ease;
}

.recipe-preview-name {
  display: flex;
  font-size: 2em;
  border-bottom: 1px solid rgba(0, 0, 0, 0.3);
  width: 100%;
  align-self: flex-start;
}

.recipe-preview-container:hover{
  -webkit-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2);
  transition: 0.5s ease;
  cursor: pointer;
  }

.recipe-preview-container:nth-child(even) {
  background-color: rgba(255, 255, 255, 0.2);
}

.recipe-preview-container:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.1);
  color: rgb(0, 0, 0);
}

.recipe-preview-description{
  font-size: 1.2em;
}

/* <div className="surprise-meal">
<span className="header">Want to leave it to chance?</span>
<div className="generate-buttons">
  <button className="generate btn-submit" onClick={generateRandom}>Generate Me A Random Meal!</button>
  <button className="generate btn-submit" onClick={generateRandom}>Generate Me A Random Drink!</button>
</div>
<Recipe recipe={random}/>
</div> */

/* Surprise Meal CSS */

.surprise-meal {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 80vh;
  background-color: rgba(255, 255, 255, 0.1);
}

.surprise-meal .header {
  display: flex;
  margin-top: 3em;
  padding: auto;
}

.generate {
  display: flex;
  flex-direction: row;
  width: 80%;
  margin: auto;
  background-color: rgba(243, 233, 233, 0.3);
  border-radius: 10px;
}

/* .generate {
  width: 45%;
  margin: auto;
} */

.generate-btn {
  text-decoration:none;
  font-size:25px;
  color:#000000;
  /* color:#3e1fad; */
  padding:20px 50px;
  border:3px solid #000000;
  /* border:3px solid #3e1fad; */
  position:relative;
  margin: 3em;
}
.generate-btn::before,
.generate-btn::after{
  content:" ";
  position:absolute;
  width:40px;
  height:40px;
  border:inherit;
  transition:all .5s;
}
.generate-btn::before{
  top:-15px;
  left:-15px;
  border-width:3px 0 0 3px;
}
.generate-btn::after{
  bottom:-15px;
  right:-15px;
  border-width:0 3px 3px 0;
}
.generate-btn:hover::before,
.generate-btn:hover::after{
  width:calc(100% + 27px);
  height:calc(100% + 27px);
  border:3px solid #ffffff;
  color:#ffffff;
}

/* 
<div className='drink-container' key={drink._id}>
<div className="drink-details">
  <div className="drink-name">{drink.name}</div>
  <span>Instructions</span>
  <div className="drink-ingredients">
    {
      drink.ingredients.map(res => <div>{res}</div>)
    }
  </div>
  <div className="drink-instructions">
    <span>Instructions</span>
    <div className="language-select">
        <select onChange={(event) => {languageSetter(event)}} className="drink-lang-select" id="drink-lang-select" >
          <option selected>Select Language</option>
          <option value="english">English</option>
          <option value="deutsch">Deutsch</option>
          <option value="spanish">Spanish</option>
          <option value="french">French</option>
          <option value="italian">Italian</option>
        </select>
        <p>{drink[language]}</p>
    </div>
  </div>
</div>
</div>
*/

    /* Drink CSS */

.drink-container {
  display: flex;
  flex-direction: column;
  background-color: rgba(255, 255, 255, 0.2);
  width: 80%;
  margin: auto;
  margin-top: 2em;
  height: 750px;
  align-items: flex-start;
  border-radius: 10px;
  padding: 1em;
  border: 1px solid rgba(0, 0, 0, 0.3);
  position: relative;
}

.drink-name {
  font-size: 2em;
  font-weight: 600;
  color: black;
  background-clip: text;
  -webkit-background-clip: text;
  align-self: center;
}

.drink-details {
  display: flex;
  flex-direction: row;
  width: 80%;
  margin: 10px auto;
}

.drink-ingredients {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  align-items: flex-start;
  width: 25%;
  font-size: 1.2em;
}

.drink-details span , .drink-instructions span {
  font-weight: 500;
  font-size: 1.3em;
  width: 100%;
  border-bottom: 1px solid rgba(0, 0, 0, 0.3);
  margin-bottom: 1em;
}

.drink-instructions {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 75%;
  margin-left: 1em;
  font-size: 1.2em;
}

.language-select {
  width: 100%;
  border-radius: 5px;
  display: flex;
  align-items: flex-start;
  flex-direction: column;
}

.drink-lang-select {
  width: 100%;
}

select{
  width: 10%;
  height: 50px;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding-left: 5px;
  padding: 10px;
  font-size: 18px;
  font-family: 'Open Sans', sans-serif;
  color: #555;
  background-color: rgb(255, 255, 255);
  background-image: none;
  /* border: 1px solid rgb(41, 18, 18); */
}
select>option{
  font-size: 18px;
  font-family: 'Open Sans', sans-serif;
  color: #555;
  background-color: rgb(247, 247, 247);
  background-image: none;
  font-size: 18px;
  height: 50px;
  padding: 15px;
  /* border: 1px solid rgb(41, 18, 18); */
}

.yay-or-nay {
  display: flex;
  flex-direction: row;
  position: absolute;
  bottom: 1em;
  align-self: center;
}

.yay {
  border-color:rgb(0, 225, 255);
}

.nay {
  border-color:rgb(255, 0, 76);
}

/* Loading Screen CSS */
/* .loader {
  position: relative;
  width: 120px;
  height: 14px;
  border-radius: 0 0 15px 15px;
  background-color: #3e494d;
  box-shadow: 0 -1px 4px #5d6063 inset;
  animation: panex 0.5s linear alternate infinite;
  transform-origin: 170px 0;
  z-index: 10;
  perspective: 300px;

}
.loader::before {
content: '';
position: absolute;
left: calc( 100% - 2px);
top: 0;
z-index: -2;
height: 10px;
width: 70px;
border-radius: 0 4px 4px 0;
background-repeat: no-repeat;
background-image: linear-gradient(#6c4924, #4b2d21), linear-gradient(#4d5457 24px, transparent 0), linear-gradient(#9f9e9e 24px, transparent 0);
background-size: 50px 10px , 4px 8px , 24px 4px;
background-position: right center , 17px center , 0px center;
}
.loader::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 0;
  z-index: -2;
  transform: translate(-50% , -20px) rotate3d(75, -2, 3, 78deg);
  width: 55px;
  height: 53px;
  background: #fff;
  background-image:
  radial-gradient(circle 3px , #fff6 90%, transparent 10%),
  radial-gradient(circle 12px , #ffc400 90%, transparent 10%),
  radial-gradient(circle 12px , #ffae00 100%, transparent 0);
  background-repeat: no-repeat;
  background-position: -4px -6px , -2px -2px , -1px -1px;
  box-shadow: -2px -3px #0002 inset, 0 0 4px #0003 inset;
  border-radius: 47% 36% 50% 50% / 49% 45% 42% 44%;
  animation: eggRst 1s ease-out infinite;
}

@keyframes eggRst {
0% ,  100%{  transform: translate(-50%, -20px) rotate3d(90, 0, 0, 90deg); opacity: 0; }
10% , 90% {  transform: translate(-50%, -30px) rotate3d(90, 0, 0, 90deg); opacity: 1; }
25%  {transform:  translate(-50% , -40px) rotate3d(85, 17, 2, 70deg) }
75% {transform:  translate(-50% , -40px) rotate3d(75, -3, 2, 70deg) }
50% {transform:  translate(-55% , -50px) rotate3d(75, -8, 3, 50deg) }
}
@keyframes panex {
0%{  transform: rotate(-5deg)  }
100%{  transform: rotate(10deg)  }
} */

/* .loader {
  font-size: 48px;
  font-weight: 600;
  display: inline-block;
  letter-spacing: 2px;
  font-family: Arial, Helvetica, sans-serif;
  color: #FFF;
  box-sizing: border-box;
  animation: spotlight 2s linear infinite alternate;
}

@keyframes spotlight {
  0% , 20% {
    opacity: 1;
    letter-spacing: 2px;
   }
 80% , 100% {
    opacity: 0;
    letter-spacing: 32px;
   }
} */
  
.circles {
  width:300px;
  height:300px;
  position:relative;
  margin:auto;
}
.circles > * {
  background-color:transparent;
  box-sizing:border-box;
  border:5px solid powderblue;
  border-top: 0 solid transparent;
  border-left: 0 solid transparent;
  border-radius: 50%;
  position:absolute;
  animation: spin 4s infinite linear alternate;
}
      
.circle1 {
  width: 300px; height: 300px;
  animation-delay:-5s;    
  border-color:rgba(163,207,213, 1);
}
.circle2 {
  width: 280px; height: 280px;
  top:10px;left:10px;
  animation-delay:-4.9s;
  border-color:rgba(163,207,213, .95);
}
.circle3 {
  width: 260px; height: 260px;
  top:20px;left:20px;
  animation-delay:-4.8s;
  border-color:rgba(163,207,213, .9);
}
.circle4 {
  width: 240px; height: 240px;
  top:30px;left:30px;
  animation-delay:-4.7s;
  border-color:rgba(163,207,213, .85);
}
.circle5 {
  width: 220px; height: 220px;
  top:40px;left:40px;
  animation-delay:-4.6s;
  border-color:rgba(163,207,213, .8);
}
.circle6 {
  width: 200px; height: 200px;
  top:50px;left:50px;
  animation-delay:-4.5s;
  border-color:rgba(163,207,213, .75);
}
.circle7 {
  width: 180px; height: 180px;
  top:60px;left:60px;
  animation-delay:-4.4s;
  border-color:rgba(163,207,213, .7);
}
.circle8 {
  width: 160px; height: 160px;
  top:70px;left:70px;
  animation-delay:-4.3s;
  border-color:rgba(163,207,213, .65);
}
.circle9 {
  width: 140px; height: 140px;
  top:80px;left:80px;
  animation-delay:-4.2s;
  border-color:rgba(163,207,213, .6);
}
.circle10 {
  width: 120px; height: 120px;
  top:90px;left:90px;
  animation-delay:-4.1s;
  border-color:rgba(163,207,213, .55);
}
.circle11 {
  width: 100px; height: 100px;
  top:100px;left:100px;
  animation-delay:-4s;
  border-color:rgba(163,207,213, .5);
}
.circle12 {
  width: 80px; height: 80px;
  top:110px;left:110px;
  animation-delay:-3.9s;
  border-color:rgba(163,207,213, .45);
}
.circle13 {
  width: 60px; height: 60px;
  top:120px;left:120px;
  animation-delay:-3.8s;
  border-color:rgba(163,207,213, .4);
}
.circle14 {
  width: 40px; height: 40px;
  top:130px;left:130px;
  animation-delay:-3.7s;
  border-color:rgba(163,207,213, .35);
}
.circle15 {
  width: 20px; height: 20px;
  top:140px;left:140px;
  animation-delay:-3.6s;
  border-color:rgba(163,207,213, .3);
}
      
@keyframes spin {
    0% {transform: rotate(0deg);}
    100% {transform: rotate(360deg);};
}
      

/* .loader {
  position: relative;
  width: 120px;
  height: 14px;
  border-radius: 0 0 15px 15px;
  background-color: #3e494d;
  box-shadow: 0 -1px 4px #5d6063 inset;
  animation: panex 0.5s linear alternate infinite;
  transform-origin: 170px 0;
  z-index: 10;
  perspective: 300px;

}
.loader::before {
content: '';
position: absolute;
left: calc( 100% - 2px);
top: 0;
z-index: -2;
height: 10px;
width: 70px;
border-radius: 0 4px 4px 0;
background-repeat: no-repeat;
background-image: linear-gradient(#6c4924, #4b2d21), linear-gradient(#4d5457 24px, transparent 0), linear-gradient(#9f9e9e 24px, transparent 0);
background-size: 50px 10px , 4px 8px , 24px 4px;
background-position: right center , 17px center , 0px center;
}
.loader::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 0;
  z-index: -2;
  transform: translate(-50% , -20px) rotate3d(75, -2, 3, 78deg);
  width: 55px;
  height: 53px;
  background: #fff;
  background-image:
  radial-gradient(circle 3px , #fff6 90%, transparent 10%),
  radial-gradient(circle 12px , #ffc400 90%, transparent 10%),
  radial-gradient(circle 12px , #ffae00 100%, transparent 0);
  background-repeat: no-repeat;
  background-position: -4px -6px , -2px -2px , -1px -1px;
  box-shadow: -2px -3px #0002 inset, 0 0 4px #0003 inset;
  border-radius: 47% 36% 50% 50% / 49% 45% 42% 44%;
  animation: eggRst 1s ease-out infinite;
}

@keyframes eggRst {
0% ,  100%{  transform: translate(-50%, -20px) rotate3d(90, 0, 0, 90deg); opacity: 0; }
10% , 90% {  transform: translate(-50%, -30px) rotate3d(90, 0, 0, 90deg); opacity: 1; }
25%  {transform:  translate(-50% , -40px) rotate3d(85, 17, 2, 70deg) }
75% {transform:  translate(-50% , -40px) rotate3d(75, -3, 2, 70deg) }
50% {transform:  translate(-55% , -50px) rotate3d(75, -8, 3, 50deg) }
}
@keyframes panex {
0%{  transform: rotate(-5deg)  }
100%{  transform: rotate(10deg)  }
} */


/* 
    <div className="profile-container">{currentUser ? (
        <>
        <span id="recipe-label" className="profile-label">PROFILE</span>
        <div className="user-profile">
          <div className="user-details">
            <div className="username">{currentUser.username}</div>
            <img className="user-profile-pic" src={currentUser.profilePic} alt={currentUser.profilePic}></img>
          </div>
          <div className="user-recipes">
            <div className="user-food-favourites">{currentUser.foodFavourites.length}</div>
            <div className="user-recipe">{currentUser.personalRecipes.length}</div>
            <div className="user-drink-favourites">{currentUser.drinkFavourites.length}</div>
          </div>
        </div>
        </>
    ): (
      <>
        <span>COME ON MAN YOU CANNOT HAVE A PROFILE WITHOUT LOGGING IN</span>
      </>

    )
      }
    </div>
*/

/* User profile CSS */



.profile-label {
  font-size: 2em;
}

.profile-container {
  background-color: rgba(243, 233, 233, 0.3);
  width: 100%;
  height: 100vh;
}

.user-profile {
  
  display: flex;
  flex-direction: row;
  width: 100%;
}

.user-profile-pic {
  width: 100%;
  border-radius: 1rem;
}

.user-details {
  display: flex;
  flex-direction: column;
  width: 30%;
  padding: 1em;
}

.username {
  font-size: 2em;
}

.user-recipes {
  display: flex;
  flex-direction: column;
  width: 35%;
  justify-content: space-evenly;
  padding: 1em;
}

.day-meal {
  display: flex;
  flex-direction: column;
  width: 35%;
  padding: 1em;
  justify-content: space-around;
}

.user-recipe,
.user-food-favourites,
.user-drink-favourites {
  height: 33%;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: flex-start;
}

.user-recipe span,
.user-food-favourites span,
.user-drink-favourites span,
#plan-label ,.meal {
  font-size: 1.5em;
  align-self: center;
}

.user-recipe .fav-name,
.user-food-favourites .fav-name,
.user-drink-favourites .fav-name {
  align-self: center;
  font-size: 1em;
  font-weight: 500;
  align-self: flex-start;
  margin-top: 0.5rem;
  width: 100%;
  align-items: flex-start;
  justify-content: flex-start;
}

.breakfast,
.lunch,
.dinner {
  height: 33%;
  display: flex;
  flex-direction: column;
}

#plan-label,
#recipe-label {
  border-bottom: 1px solid rgba(0, 0, 0, 0.3);
  width: 80%;
}

.remove-fav {
  align-self: flex-end;
}

.ingred {
  text-decoration: none;
  color: #000000;
}

/* .meal {
  align-self: flex-start;
  margin-left: 1em;
  font-size: 1;
} */

/* <div className="day-meal">
<div className="breakfast">
  <span id="plan-label">Breakfast Plans:</span>
  {currentUser.breakfast.length ? (
    currentUser.breakfast.map((el) => {
      return <span className="meal" key={el._id} id={el._id} onClick={(e) => {openRecipe(e, 'recipe')}}>{el.name}</span>
    })
  ) : <span>You dont have a plan for breakfast yet.</span>}
</div>
<div className="lunch">
  <span id="plan-label">Lunch Plans:</span>
    {currentUser.lunch.length ? (
      currentUser.lunch.map((el) => {
        return <span className="meal" key={el._id} id={el._id} onClick={(e) => {openRecipe(e, 'recipe')}}>{el.name}</span>
      })
    ) : <span>You dont have a plan for lunch yet.</span>}
</div>
<div className="dinner">
  <span id="plan-label">Dinner Plans:</span>
    {currentUser.dinner.length ? (
      currentUser.dinner.map((el) => {
        return <span className="meal" key={el._id} id={el._id} onClick={(e) => {openRecipe(e, 'recipe')}}>{el.name}</span>
      })
    ) : <span>You dont have a plan for dinner yet.</span>}
</div>
</div> */
